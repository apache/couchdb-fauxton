@import "variables.less";
@import "mixins.less";


/* new flex layout for templates. "body #dashboard" needed for specificity: will remove at end */
body #dashboard .flex-layout {
  .display-flex();

  &.flex-col {
    .flex-direction(column);
  }
  &.flex-row {
    .flex-direction(row);
  }

  /* overrides */
  padding: 0;
  &>div {
    padding: 0;
  }
  /* end overrides */

  /*
  always default all child elements as flex items that neither shrink nor expand. Assumes all flex-layout containers
  contain at least one .flex-body to indicate that's the one that expands
  */
  &>* {
    .flex(0);
  }

  /* notice we don't set heights. Flex will expand to fill the content but no more */
  #dashboard-upper-content {
    .flex(0 0 auto);
  }
  #dashboard-lower-content {
    padding: @panelPadding;
  }

  #footer {
    .flex(0 0 auto);
  }
}

/* can be added to any element in a display:flex element that you want to act as the main body. It expands to the
   available space and shows a scrollbar */
body #dashboard .flex-body {
  .flex(1);
  overflow: auto;
}

/* used on the databases page. To be removed once moved to flexbox */
.one-pane #footer {
  position: absolute;
  bottom: 0;
  width: 100%;
  margin: 0 -20px;
}

/* this drops .fixed-header, which was a position:absolute'd element, and switches it and all children to use flexbox. */
.one-pane > header {
  width: 100%;

  /* TODO move all style stuff out of this file. layouts.less should be entirely layout CSS, nothing else */
  .bottom-shadow-border();

  #breadcrumbs {
    overflow: hidden;

    /* overrides - can be removed later */
    float: none;
  }
  #right-header {
    /* TODO. How come .flex(0 0 inherit) is invalid? */
    flex-grow: 0;
    flex-shrink: 0;
    flex-basis: inherit;
  }
  #api-navbar {
    .flex(0 0 108px);
  }
}


/* temporary wedge. Can be replaced at end */
.with-sidebar {
  #breadcrumbs {
    float: left;
  }
  #api-navbar {
    float: right;
  }
}
.right-header-wrapper {
  #api-navbar {
    float: right;
  }
}

